# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-27 21:02
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'reviews',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'default_related_name': 'tags',
            },
        ),
        migrations.CreateModel(
            name='TagSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.ManyToManyField(to='whiskies.Tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_related_name': 'tag_searches',
            },
        ),
        migrations.CreateModel(
            name='TagTracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='whiskies.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Whiskey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('img_url', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
                ('price', models.IntegerField()),
                ('rating', models.IntegerField()),
            ],
            options={
                'default_related_name': 'whiskies',
            },
        ),
        migrations.AddField(
            model_name='tagtracker',
            name='whiskey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='whiskies.Whiskey'),
        ),
        migrations.AddField(
            model_name='tag',
            name='whiskies',
            field=models.ManyToManyField(through='whiskies.TagTracker', to='whiskies.Whiskey'),
        ),
        migrations.AddField(
            model_name='review',
            name='whiskey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='whiskies.Whiskey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='disliked_whiskies',
            field=models.ManyToManyField(related_name='disliked_whiskies', to='whiskies.Whiskey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='liked_whiskies',
            field=models.ManyToManyField(related_name='liked_whiskies', to='whiskies.Whiskey'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
